// #### Task 1 üíª
// –ù–∞–ø–∏—Å–∞—Ç—å –∫–ª–∞—Å—Å, –ø—Ä–∏–Ω–∏–º–∞—é—â–∏–π —Å—Ç—Ä–æ–∫—É (`str`), —á–∏—Å–ª–æ (`symNum`) –∏ —Å–∏–º–≤–æ–ª (`sym`) +
// —Å–æ–∑–¥–∞—Ç—å
//     –≥–µ—Ç—Ç–µ—Ä, –∫–æ—Ç–æ—Ä—ã–π –≤–æ–∑–≤—Ä–∞—â–∞–µ—Ç –µ—Å—Ç—å –ª–∏ –≤ —Å—Ç—Ä–æ–∫–µ "str" —Å–∏–º–≤–æ–ª `sym` :bool
//     –≥–µ—Ç—Ç–µ—Ä, –∫–æ—Ç–æ—Ä—ã–π –≤–æ–∑–≤—Ä–∞—â–∞–µ—Ç —Å–∏–º–≤–æ–ª `symNum` –≤ —Å—Ç—Ä–æ–∫–µ `str`.     :string
//         –ï—Å–ª–∏ `symNum` –±–æ–ª—å—à–µ, —á–µ–º –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ —Å–∏–º–≤–æ–ª–æ–≤ –≤ `str`, —Ç–æ –≥–µ—Ç—Ç–µ—Ä –≤–æ–∑–≤—Ä–∞—â–∞–µ—Ç —Å–ª—É—á–∞–π–Ω—ã–π —Å–∏–º–≤–æ–ª
//     –º–µ—Ç–æ–¥, –∫–æ—Ç–æ—Ä—ã–π –ø—Ä–∏–Ω–∏–º–∞–µ—Ç –∫–æ–ª–ª–µ–∫—Ü–∏—é Map —Å–æ —Å—Ç—Ä–æ–∫–∞–º–∏,
//         –∏ –≤–æ–∑–≤—Ä–∞—â–∞–µ—Ç —Å—Ç—Ä–æ–∫—É `str`, –≥–¥–µ –∑–∞–º–µ–Ω–µ–Ω–µ–Ω–∞ –∫–∞–∂–¥–∞—è 0 –ø–æ–¥—Å—Ç—Ä–æ–∫–∞ –∏–∑ Map –Ω–∞ 1
//         –ø—Ä–∏–º–µ—Ä: `str = '123qweasd12', Map([['12', '-'], ['ea', '*']]), result = '-3qw*sd-'`
//     –≤—ã–≤–µ—Å—Ç–∏ –≤—Å–µ —Å–æ–∑–¥–∞–Ω–Ω—ã–µ –≥–µ—Ç—Ç–µ—Ä—ã –∏ –ø–æ–ª–µ `str`

import { stringify } from "querystring";

class Something {
  str: string;
  symNum: number;
  sym: string;

  constructor(str: string, symNum: number, sym: string) {
    this.str = str;
    this.symNum = symNum;
    this.sym = sym;
  }
  //—Å–æ–∑–¥–∞—Ç—å –≥–µ—Ç—Ç–µ—Ä, –∫–æ—Ç–æ—Ä—ã–π –≤–æ–∑–≤—Ä–∞—â–∞–µ—Ç –µ—Å—Ç—å –ª–∏ –≤ —Å—Ç—Ä–æ–∫–µ `sym`
  get findSym() {
    return this.str.includes(this.sym);
  }
  //–≥–µ—Ç—Ç–µ—Ä, –∫–æ—Ç–æ—Ä—ã–π –≤–æ–∑–≤—Ä–∞—â–∞–µ—Ç —Å–∏–º–≤–æ–ª `symNum` –≤ —Å—Ç—Ä–æ–∫–µ `str`.     :string
  //–ï—Å–ª–∏ `symNum` –±–æ–ª—å—à–µ, –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ —á–µ–º —Å–∏–º–≤–æ–ª–æ–≤ –≤ `str`, –≤–æ–∑–≤—Ä–∞—â–∞–µ—Ç —Å–ª—É—á–∞–π–Ω—ã–π —Å–∏–º–≤–æ–ª
  get returnValue() {
    if (this.symNum > this.str.length) {
      return Math.random();
    } else return this.str.charAt(this.symNum);
  }
  //–º–µ—Ç–æ–¥, –∫–æ—Ç–æ—Ä—ã–π –ø—Ä–∏–Ω–∏–º–∞–µ—Ç –∫–æ–ª–ª–µ–∫—Ü–∏—é Map —Å–æ —Å—Ç—Ä–æ–∫–∞–º–∏,
  //         –∏ –≤–æ–∑–≤—Ä–∞—â–∞–µ—Ç —Å—Ç—Ä–æ–∫—É `str`, –≥–¥–µ –∑–∞–º–µ–Ω–µ–Ω–µ–Ω–∞ –∫–∞–∂–¥–∞—è 0 –ø–æ–¥—Å—Ç—Ä–æ–∫–∞ –∏–∑ Map –Ω–∞ 1
  //         –ø—Ä–∏–º–µ—Ä: `str = '123qweasd12', Map([['12', '-'], ['ea', '*']]), result = '-3qw*sd-'`

  newMap(input: Map<string, string>): string {
    //1.  –ø–æ–ª—É—á–∏—Ç—å –Ω–∞ –≤—Ö–æ–¥ Map

    //2. –î–ª—è –∫–∞–∂–¥–æ–π –∑–≤–ø–∏—Å–∏ –≤ Map...
    let resultingStr: string = this.str;
    input.forEach((val: string, key: string, data: Map<string, string>) => {
      // 3. –ò–∑–º–µ–Ω–∏—Ç—å –∑–Ω–∞—á–µ–Ω–∏–µ —Å–≤–æ–π—Å—Ç–≤–∞ "str"
      resultingStr = resultingStr.replace(key, val);
    });
    // 4. –í–µ—Ä–Ω—É—Ç—å –Ω–æ–≤–æ–µ –∑–Ω–∞—á–µ–Ω–∏–µ "str"
    console.log(resultingStr);
    return resultingStr;
  }
}

const obj = new Something("my_string", 5, "mk");
// console.log(obj.findSym);
// console.log(obj.returnValue);

const inputMap = new Map([
  ["hellow", "world"],
  ["my", "value"],
]);
const dgg = obj.newMap(inputMap);
